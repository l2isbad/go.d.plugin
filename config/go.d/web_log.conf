# netdata go.d.plugin configuration for example
#
# This file is in YaML format. Generally the format is:
#
# name: value
#
# There are 2 sections:
#  - GLOBAL
#  - JOBS
#
# ----------------------------------------------------------------------------------------------------------------------
# Global Variables
# These variables set the defaults for all JOBs, however each JOB may define its own, overriding the defaults.
#
# The GLOBAL section format:
# param1: value1
# param2: value2
#
# Currently supported global parameters:
#  - update_every
#      Data collection frequency. Type <int>. Default: 1.
#  - autodetection_retry
#      Re-check interval in seconds. Attempts to start the job are made once every interval.
#      Zero means not to schedule re-check. Type <int>. Default: 0.
#
# ----------------------------------------------------------------------------------------------------------------------
# JOBS allow you to collect values from multiple sources.
# Each source will have its own set of charts.
#
# IMPORTANT:
#  - Parameter 'name' is mandatory.
#  - Jobs with the same name are mutually exclusive. Only one of them will be allowed running at any time.
#
# This allows autodetection to try several alternatives and pick the one that works.
# Any number of jobs is supported.
#
# The JOBS section format:
#
# jobs:
#   - name: job1
#     param1: value1
#     param2: value2
#
#   - name: job2
#     param1: value1
#     param2: value2
#
#   - name: job2
#     param1: value1
#
#
# ----------------------------------------------------------------------------------------------------------------------
# List of JOB specific parameters:
#  - path
#    The path to web server log file.
#    Syntax:
#      path: '/path/to/log/file'
#
#  - filter
#    Filter unwanted log lines. Logic: pass include AND !exclude.
#    Syntax:
#    filter:
#      include: pattern  # Pattern syntax: matcher.
#      exclude: pattern  # Pattern syntax: matcher.
#
#  - categories
#    Requests per URL chart (matches against URL field).
#    Syntax:
#    categories:
#      - name:  name1    # Name will be used as dimension.
#        match: pattern  # Pattern syntax: matcher.
#      - name:  name2    # Name will be used as dimension.
#        match: pattern  # Pattern syntax: matcher.
#
#  - user_categories
#    Requests per User Defined chart (matches against <user_defined> field, see custom_log_format).
#    Syntax:
#    user_categories:
#      - name:  name1    # Name will be used as dimension.
#        match: pattern  # Pattern to match. Syntax: matcher.
#      - name:  name2    # Name will be used as dimension.
#        match: pattern  # Pattern to match. Syntax: matcher.
#
#  - histogram
#    Cumulative histogram of response time in milli seconds.
#    Syntax:
#      histogram: [1,3,10,30,100]
#
#  - response_codes_aggregate
#    Not aggregated detailed response codes charts.
#    Syntax:
#    response_codes_aggregate: yes/no
#
#  - all_time_ips
#    All time unique client IPs chart.
#    Syntax:
#    all_time_ips: yes/no
#
#  - custom_log_format
#    Defines a custom log format. You need define CSV pattern.
#    Available keys: vhost, address, code, request, bytes_sent, resp_time, resp_time_upstream, resp_length, user_defined.
#    Syntax:
#    custom_log_format:
#      - key: address
#        index: 0
#      - key: request
#        index: 5
#      - key: code
#        index: 6
#      - key: bytes_sent
#        index: 7
#
# ----------------------------------------------------------------------------------------------------------------------
# Mandatory JOB parameters:
#  - name
#  - path
#
# ----------------------------------------------------------------------------------------------------------------------
# GLOBAL
#
update_every: 1
autodetection_retry: 0
#
# ----------------------------------------------------------------------------------------------------------------------
# JOBS
#
jobs:
  - name: example
